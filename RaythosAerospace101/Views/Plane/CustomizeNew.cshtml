@model RaythosAerospace101.ViewModels.FloorPlanDesignScheme
@{
    ViewData["Title"] = "CustomizeNew";
}


<form id="form_customizeNew" method="post" asp-controller="Plane" asp-action="CustomizeNew">
    <section style="min-height: 87vh;" class="v__center">
        <div class="width920">
            <div class="fluid-container">
                <div class="row">
                    <div style="margin-bottom: 12px;" class="col-12 center">
                        <div class="typo__heading__2 ">Floor Plan Options</div>
                    </div>
                    @foreach (var item in Model.FloorPlans)
                    {
                        if (item.Stat == "Active")
                        {
                            <div class="col-12 col-md-6 center" style=" padding: 24px; box-sizing:border-box;">
                                <div class="card__floorPlan">
                                    <img src="../../images/floor_plans/@item.Image_Path" alt="image">
                                    <div style="margin-top: 12px;" class="card__floorPlan__persons">
                                        <div></div>
                                        <div class="typo__subHeading__3">@item.Persons</div>
                                    </div>
                                    <div style="margin-top: 14px;" class="typo__subHeading__3">@item.Title</div>
                                    <div style="margin-top: 4px; min-height: 64px;" class="typo__para__1" >@item.Description</div>
                                    <div style="margin-top: 36px;" class="center customization_radio">
                                        <input value="@item.Id" onclick="showOverview(@item.Persons, @item.Id)" type="radio" class="d-none" id="floor @item.Id" name="FloorPlanId">
                                        <label for="floor @item.Id" class="raised_button"></label>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </section>
    <section class="v__center" id="section_designSchemes">
        <div class="width920">
            <div class="fluid-container">
                <div class="row">
                    <div style="margin-bottom: 12px;" class="col-12 center">
                        <div class="typo__heading__2 ">Design Scheme Options</div>
                    </div>
                    @foreach (var item in Model.planeDesignSchemes)
                    {
                        if (item.isActive == true)
                        {
                            <div class="col-12 col-md-6 center" style=" padding: 24px; box-sizing:border-box;">
                                <div class="card__designScheme">
                                    <div class="card__designScheme__img" style="background-image: url(../../images/design_schemes/@item.Image_Path); "></div>
                                    <div class="card__designScheme__content">
                                        <div style="margin-top: 14px;" class="typo__subHeading__3">@item.Title</div>
                                        <div style="margin-top: 4px;" class="typo__para__1">@item.Description</div>
                                        <div style="margin-top: 36px;" class="center customization_radio">
                                            <input value="@item.Id" onclick="onDesignScheme(@item.Id)" type="radio" class="d-none" id="designScheme @item.Id" name="PlaneDesignSchemeId">
                                            <label for="designScheme @item.Id" class="raised_button"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                    }
                </div>
            </div>
        </div>
    </section>
    <section style="min-height: 0px" class="" id="section_overview">
       
    </section>
</form>

<script>
    let floor = null;
    let designScheme = null;

    const showOverview = function (persons, cardId) {
        floor = cardId;

        const markup = `
                <div class="width920">
                    <div class="fluid-container">
                        <div class="row">
                            <div class="col-12 center">
                                <div class="typo__heading__2 ">@Model.plane.Name</div>
                            </div>
                            <img src="../../images/planes/@Model.plane.Image" class="img__single__product" alt="">
                        </div>
                        <div class="row">
                            <div class="col-12 col-md-3 center">
                                <div style="margin-bottom: 14px; display: flex; align-items: center;">
                                    <div class="spec__item__range"></div>
                                    <div class="spec__item__txt__1">@Model.plane.Distant</div>
                                    <div class="spec__item__txt__2">km</div>
                                </div>
                            </div>
                            <div class="col-12 col-md-3 center">
                                <div style="margin-bottom: 14px; display: flex; align-items: center;">
                                    <div class="spec__item__persons"></div>
                                    <div class="spec__item__txt__1">${persons}</div>
                                    <div class="spec__item__txt__2">Persons</div>
                                </div>
                            </div>
                            <div class="col-12 col-md-3 center">
                                <div style="margin-bottom: 14px; display: flex; align-items: center;">
                                    <div class="spec__item__speed"></div>
                                    <div class="spec__item__txt__1">@Model.plane.Mach</div>
                                    <div class="spec__item__txt__2">Mach</div>
                                </div>
                            </div>
                            <div class="col-12 col-md-3 center">
                                <div style="margin-bottom: 14px; display: flex; align-items: center;">
                                    <div class="spec__item__range"></div>
                                    <div class="spec__item__txt__1">@Model.plane.Baggage</div>
                                    <div class="spec__item__txt__2">ft3 Baggage</div>
                                </div>
                            </div>
                        </div>
                        <div style="margin: 48px 0;" class="center">

                            <div style="display: flex; gap: 16px;">

                                <input onclick="setFormAction('AddToBasket')" type="submit" class="text__button" value="Add to Basket">
                                <input onclick="setFormAction('placeOrder')" type="submit" class="filled__button" value="Place Order">
                            </div>
                        </div>
                    </div>
                </div>

                <input type="hidden" id="formAction" name="formAction" value="" />
                <input type="text" style="display: none" name="PlaneId" value="@Model.plane.Id"/>`

        document.getElementById("section_overview").innerHTML = markup;
        document.getElementById("section_overview").style.minHeight = "100vh";
    }

    const onDesignScheme = function (cardId) {
        designScheme = cardId;
    }

    const setFormAction = function (action) {
        document.getElementById('formAction').value = action;
    }

    function callControllerMethod() {
        fetch('/Plane/TestMethod')
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
                // Handle the response data here
            })
            .catch(error => {
                console.error('Fetch error:', error);
            });
    }

</script>
